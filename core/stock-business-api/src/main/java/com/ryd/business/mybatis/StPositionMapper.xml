<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryd.business.mybatis.StPositionMapper">
  <resultMap id="BaseResultMap" type="com.ryd.business.model.StPosition">
    <id column="position_id" jdbcType="CHAR" property="positionId" />
    <result column="account_id" jdbcType="CHAR" property="accountId" />
    <result column="stock_id" jdbcType="CHAR" property="stockId" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="market_amount" jdbcType="BIGINT" property="marketAmount" />
    <result column="avg_price" jdbcType="DECIMAL" property="avgPrice" />
    <result column="status" jdbcType="SMALLINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    position_id, account_id, stock_id, amount, market_amount, avg_price, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from st_position
    where position_id = #{positionId,jdbcType=CHAR}
  </select>
  <select id="selectByKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from st_position
    where account_id = #{accountId,jdbcType=CHAR} and stock_id = #{stockId,jdbcType=CHAR}
  </select>
  <select id="selectCount" resultType="java.lang.Integer">
    select count(position_id) from st_position
  </select>
  <select id="selectListByKeySelective" resultType="java.util.List" resultMap="BaseResultMap">
    select * from st_position
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test="record.accountId != null and record.accountId != ''" >
        account_id = #{record.accountId,jdbcType=CHAR}
      </if>
      <if test="record.stockId != null and record.stockId != ''" >
        and stock_id = #{record.stockId,jdbcType=CHAR}
      </if>
      <if test="record.status != null" >
        and status = #{record.status,jdbcType=SMALLINT}
      </if>
    </trim>
    limit #{offset, jdbcType=INTEGER},#{limit, jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from st_position
    where position_id = #{positionId,jdbcType=CHAR}
  </delete>
  <delete id="deleteBatch" parameterType="List">
    delete from st_position where position_id in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.ryd.business.model.StPosition">
    insert into st_position (position_id, account_id, stock_id, 
      amount, market_amount, avg_price, 
      status)
    values (#{positionId,jdbcType=CHAR}, #{accountId,jdbcType=CHAR}, #{stockId,jdbcType=CHAR}, 
      #{amount,jdbcType=BIGINT}, #{marketAmount,jdbcType=BIGINT}, #{avgPrice,jdbcType=DECIMAL}, 
      #{status,jdbcType=SMALLINT})
  </insert>
  <insert id ="insertBatch" parameterType="java.util.List" >
    insert into st_position (position_id, account_id, stock_id,
    amount, market_amount, avg_price,
    status)
    values
    <foreach collection ="list" item ="item" index ="index" separator =",">
      (#{item.positionId,jdbcType=CHAR}, #{item.accountId,jdbcType=CHAR}, #{item.stockId,jdbcType=CHAR},
      #{item.amount,jdbcType=BIGINT}, #{item.marketAmount,jdbcType=BIGINT}, #{item.avgPrice,jdbcType=DECIMAL},
      #{item.status,jdbcType=SMALLINT})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.ryd.business.model.StPosition">
    insert into st_position
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="positionId != null">
        position_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="stockId != null">
        stock_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="marketAmount != null">
        market_amount,
      </if>
      <if test="avgPrice != null">
        avg_price,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="positionId != null">
        #{positionId,jdbcType=CHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=CHAR},
      </if>
      <if test="stockId != null">
        #{stockId,jdbcType=CHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="marketAmount != null">
        #{marketAmount,jdbcType=BIGINT},
      </if>
      <if test="avgPrice != null">
        #{avgPrice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryd.business.model.StPosition">
    update st_position
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=CHAR},
      </if>
      <if test="stockId != null">
        stock_id = #{stockId,jdbcType=CHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="marketAmount != null">
        market_amount = #{marketAmount,jdbcType=BIGINT},
      </if>
      <if test="avgPrice != null">
        avg_price = #{avgPrice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
    </set>
    where position_id = #{positionId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryd.business.model.StPosition">
    update st_position
    set account_id = #{accountId,jdbcType=CHAR},
      stock_id = #{stockId,jdbcType=CHAR},
      amount = #{amount,jdbcType=BIGINT},
      market_amount = #{marketAmount,jdbcType=BIGINT},
      avg_price = #{avgPrice,jdbcType=DECIMAL},
      status = #{status,jdbcType=SMALLINT}
    where position_id = #{positionId,jdbcType=CHAR}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" separator=";" >
      update st_position
      <set>
        account_id = #{item.accountId,jdbcType=CHAR},
        stock_id = #{item.stockId,jdbcType=CHAR},
        amount = #{item.amount,jdbcType=BIGINT},
        market_amount = #{item.marketAmount,jdbcType=BIGINT},
        avg_price = #{item.avgPrice,jdbcType=DECIMAL},
        status = #{item.status,jdbcType=SMALLINT}
      </set>
      where position_id = #{item.positionId,jdbcType=CHAR}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" separator=";" >
      update st_position
      <set>
        <if test="item.accountId != null">
          account_id = #{item.accountId,jdbcType=CHAR},
        </if>
        <if test="item.stockId != null">
          stock_id = #{item.stockId,jdbcType=CHAR},
        </if>
        <if test="item.amount != null">
          amount = #{item.amount,jdbcType=BIGINT},
        </if>
        <if test="item.marketAmount != null">
          market_amount = #{item.marketAmount,jdbcType=BIGINT},
        </if>
        <if test="item.avgPrice != null">
          avg_price = #{item.avgPrice,jdbcType=DECIMAL},
        </if>
        <if test="item.status != null">
          status = #{item.status,jdbcType=SMALLINT},
        </if>
      </set>
      where position_id = #{item.positionId,jdbcType=CHAR}
    </foreach>
  </update>
</mapper>